// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tengella.Survey.Data;

#nullable disable

namespace Tengella.Survey.Data.Migrations
{
    [DbContext(typeof(SurveyDbContext))]
    [Migration("20240705195436_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tengella.Survey.Data.Models.DistributionList", b =>
                {
                    b.Property<int>("DistributionListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DistributionListId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgNmr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonNmr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DistributionListId");

                    b.ToTable("DistributionLists");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.Option", b =>
                {
                    b.Property<int>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OptionId"));

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OptionId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.OptionAnalysis", b =>
                {
                    b.Property<int>("OptionAnalysisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OptionAnalysisId"));

                    b.Property<int>("OptionId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionAnalysisId")
                        .HasColumnType("int");

                    b.Property<int>("ResponseCount")
                        .HasColumnType("int");

                    b.HasKey("OptionAnalysisId");

                    b.HasIndex("OptionId");

                    b.HasIndex("QuestionAnalysisId");

                    b.ToTable("OptionAnalyses");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<int>("SurveyFormId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionId");

                    b.HasIndex("SurveyFormId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.QuestionAnalysis", b =>
                {
                    b.Property<int>("QuestionAnalysisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionAnalysisId"));

                    b.Property<double>("AverageRating")
                        .HasColumnType("float");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("SurveyAnalysisId")
                        .HasColumnType("int");

                    b.Property<int>("TotalResponses")
                        .HasColumnType("int");

                    b.HasKey("QuestionAnalysisId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("SurveyAnalysisId");

                    b.ToTable("QuestionAnalyses");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.Response", b =>
                {
                    b.Property<int>("ResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResponseId"));

                    b.Property<int?>("OptionId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ResponseDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ResponseGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SurveyFormId")
                        .HasColumnType("int");

                    b.Property<string>("TextResponse")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResponseId");

                    b.HasIndex("OptionId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("SurveyFormId");

                    b.ToTable("Responses");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.SurveyAnalysis", b =>
                {
                    b.Property<int>("SurveyAnalysisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SurveyAnalysisId"));

                    b.Property<DateTime>("AnalysisDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SurveyFormId")
                        .HasColumnType("int");

                    b.Property<int>("TotalResponses")
                        .HasColumnType("int");

                    b.HasKey("SurveyAnalysisId");

                    b.HasIndex("SurveyFormId");

                    b.ToTable("SurveyAnalyses");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.SurveyForm", b =>
                {
                    b.Property<int>("SurveyFormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SurveyFormId"));

                    b.Property<DateTime>("ClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SurveyFormId");

                    b.ToTable("SurveyForms");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.Option", b =>
                {
                    b.HasOne("Tengella.Survey.Data.Models.Question", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.OptionAnalysis", b =>
                {
                    b.HasOne("Tengella.Survey.Data.Models.Option", "Option")
                        .WithMany()
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Tengella.Survey.Data.Models.QuestionAnalysis", "QuestionAnalysis")
                        .WithMany("OptionAnalyses")
                        .HasForeignKey("QuestionAnalysisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Option");

                    b.Navigation("QuestionAnalysis");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.Question", b =>
                {
                    b.HasOne("Tengella.Survey.Data.Models.SurveyForm", "SurveyForm")
                        .WithMany("Questions")
                        .HasForeignKey("SurveyFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SurveyForm");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.QuestionAnalysis", b =>
                {
                    b.HasOne("Tengella.Survey.Data.Models.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Tengella.Survey.Data.Models.SurveyAnalysis", "SurveyAnalysis")
                        .WithMany("QuestionAnalyses")
                        .HasForeignKey("SurveyAnalysisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("SurveyAnalysis");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.Response", b =>
                {
                    b.HasOne("Tengella.Survey.Data.Models.Option", "Option")
                        .WithMany()
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Tengella.Survey.Data.Models.Question", "Question")
                        .WithMany("Responses")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tengella.Survey.Data.Models.SurveyForm", "SurveyForm")
                        .WithMany()
                        .HasForeignKey("SurveyFormId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Option");

                    b.Navigation("Question");

                    b.Navigation("SurveyForm");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.SurveyAnalysis", b =>
                {
                    b.HasOne("Tengella.Survey.Data.Models.SurveyForm", "SurveyForm")
                        .WithMany()
                        .HasForeignKey("SurveyFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SurveyForm");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.Question", b =>
                {
                    b.Navigation("Options");

                    b.Navigation("Responses");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.QuestionAnalysis", b =>
                {
                    b.Navigation("OptionAnalyses");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.SurveyAnalysis", b =>
                {
                    b.Navigation("QuestionAnalyses");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.SurveyForm", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
