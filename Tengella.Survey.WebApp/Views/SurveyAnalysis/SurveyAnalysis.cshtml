@model SurveyResponseAnalysis

@{
    ViewData["Title"] = "Enkätanalys";
}

<div class="container mt-4">
    <div class="row mb-4">
        <div class="col text-center">
            <h2>Totalt antal svar: @Model.TotalResponses</h2>
            <h2>Svarsfrekvens: @Model.ResponseRate.ToString("P")</h2>
            <h2>Senaste svarsdatum: @Model.LastResponseDate?.ToString("g")</h2>
        </div>
    </div>

    <div id="questions-container" data-total-responses='@Html.Raw(Json.Serialize(Model.QuestionResponseCounts))' data-new-responses='@Html.Raw(Json.Serialize(Model.ShortAnswerResponses))'>
        @foreach (var question in Model.QuestionResponseCounts)
        {
            <div class="card mb-4 question-card">
                <div class="card-body">
                    <h3 class="card-title">Fråga: @question.Key</h3>
                    <p>Totalt antal svar: @question.Value</p>
                    <div class="question-content mt-3">
                        @if (Model.OptionResponseRates.Any(o => o.Key.StartsWith(question.Key + "|")))
                        {
                            <h5>Svarsfrekvens för alternativ</h5>
                            <ul class="list-group">
                                @foreach (var option in Model.OptionResponseRates.Where(o => o.Key.StartsWith(question.Key + "|")))
                                {
                                    var optionKey = option.Key;
                                    var responseCount = Model.OptionResponseCounts[optionKey];
                                    var responseRate = Model.OptionResponseRates[optionKey];
                                    <li class="list-group-item">
                                        @option.Key.Split('|')[1]: @responseCount svar / @responseRate.ToString("P") svarsfrekvens
                                    </li>
                                }
                            </ul>
                            <div class="form-group mt-3">
                                <label for="chartType-@question.Key.GetHashCode()">Välj diagramtyp:</label>
                                <select class="form-control chart-type-selector" id="chartType-@question.Key.GetHashCode()" data-question-key="@question.Key.GetHashCode()">
                                    <option value="pie">Cirkeldiagram</option>
                                    <option value="bar">Stapeldiagram</option>
                                    <option value="doughnut">Ringdiagram</option>
                                    <option value="line">Linjediagram</option>
                                </select>
                            </div>
                            <div class="row mt-5">
                                <div class="col">
                                    <canvas class="ct-chart" id="chart-@question.Key.GetHashCode()" width="400" height="400"></canvas>
                                </div>
                            </div>
                            <script>
                                document.addEventListener('DOMContentLoaded', function () {
                                    const questionKey = '@question.Key.GetHashCode()';
                                    const ctx = document.getElementById('chart-' + questionKey).getContext('2d');
                                    const initialLabels = @Html.Raw(Json.Serialize(Model.OptionResponseRates.Where(o => o.Key.StartsWith(question.Key + "|")).Select(o => o.Key.Split('|')[1]).ToArray()));
                                    const initialData = @Html.Raw(Json.Serialize(Model.OptionResponseRates.Where(o => o.Key.StartsWith(question.Key + "|")).Select(o => o.Value).ToArray()));

                                    let chart = new Chart(ctx, {
                                        type: 'pie',
                                        data: {
                                            labels: initialLabels,
                                            datasets: [{
                                                data: initialData,
                                                backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40']
                                            }]
                                        }
                                    });

                                    document.getElementById('chartType-' + questionKey).addEventListener('change', function (event) {
                                        const chartType = event.target.value;
                                        const data = {
                                            labels: initialLabels,
                                            datasets: [{
                                                label: 'Svar',
                                                data: initialData,
                                                backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40']
                                            }]
                                        };

                                        chart.destroy();
                                        chart = new Chart(ctx, {
                                            type: chartType,
                                            data: data,
                                            options: {
                                                scales: {
                                                    y: {
                                                        beginAtZero: true
                                                    }
                                                }
                                            }
                                        });
                                    });
                                });
                            </script>
                        }
                        else
                        {
                            <h5>Svar:</h5>
                            <ul class="list-group" id="responses-@question.Key">
                                @if (Model.ShortAnswerResponses.ContainsKey(question.Key))
                                {
                                    var responses = Model.ShortAnswerResponses[question.Key].Take(5).ToList();
                                    foreach (var response in responses)
                                    {
                                        <li class="list-group-item">@response</li>
                                    }
                                }
                                else
                                {
                                    <li class="list-group-item">Inga svar tillgängliga.</li>
                                }
                            </ul>
                            <div class="response-buttons mt-3">
                                <i class="fas fa-chevron-down show-more-icon" data-question-id="@question.Key"></i>
                                <i class="fas fa-chevron-up minimize-icon d-none" data-question-id="@question.Key"></i>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="~/js/analysis.js"></script>
}
